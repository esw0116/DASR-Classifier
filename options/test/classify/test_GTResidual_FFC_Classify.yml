name: Test_FFC_Residual_Classifier
model_type: SRGANGTReidualClassifyModel
scale: 4
num_gpu: 1
manual_seed: 0
num_networks: 5

datasets:
  test_1:
    name: Urban100_type00_GTDegradation
    type: PairedImageDegDataset
    dataroot_lq: dataset/RealSR_TEST/Urban100_Real_type00
    dataroot_deg: dataset/RealSR_TEST/Urban100_Real_type00_tensors
    dataroot_gt: dataset/benchmark/Urban100/HR
    io_backend:
      type: disk
  test_2:
    name: Urban100_low_GTDegradation
    type: PairedImageDegDataset
    dataroot_lq: dataset/RealSR_TEST/Urban100_Real_low
    dataroot_deg: dataset/RealSR_TEST/Urban100_Real_low_tensors
    dataroot_gt: dataset/benchmark/Urban100/HR
    io_backend:
      type: disk
  test_3:
    name: Urban100_high_GTDegradation
    type: PairedImageDegDataset
    dataroot_lq: dataset/RealSR_TEST/Urban100_Real_high
    dataroot_deg: dataset/RealSR_TEST/Urban100_Real_high_tensors
    dataroot_gt: dataset/benchmark/Urban100/HR
    io_backend:
      type: disk
  # test_4:
  #   name: DIV2K_type3
  #   type: SingleImageDataset
  #   dataroot_lq: datasets/DIV2K_type3
  #   io_backend:
  #     type: disk
  # test_10:
  #   name: DIV2K_bicubic
  #   type: SingleImageDataset
  #   dataroot_lq: datasets/DIV2K_bicubic
  #   io_backend:
  #     type: disk

# network structures
network_g:
  type: MSRResNetDynamic
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 64
  num_block: 16
  num_models: 5
  upscale: 4

network_p:
  type: Degradation_Predictor
  in_nc: 3
  nf: 64
  num_params: 33
  num_networks: 5

network_c:
  type: FFC_Degradation_Classifier
  in_nc: 3
  nf: 64

# path
path:
  pretrain_network_g: pretrained_models/net_g.pth
  pretrain_network_p: pretrained_models/net_p.pth
  pretrain_network_c: experiments/train_GTResidual_FFC_Classifier/models/net_c_10000.pth
  param_key_g: ~
  strict_load_g: true

# validation settings
val:
  save_img: true
  suffix: ~  # add suffix to saved images, if None, use exp name
  metrics:
    psnr_y: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: true
    ssim_y:
      type: calculate_ssim
      crop_border: 0
      test_y_channel: true
    niqe:
      type: calculate_niqe
      crop_border: 0

#PYTHONPATH="./:${PYTHONPATH}" CUDA_VISIBLE_DEVICES=15 python dasr/test.py -opt options/test/DASR/test_DASR.yml